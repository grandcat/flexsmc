// Code generated by protoc-gen-go.
// source: gateway.proto
// DO NOT EDIT!

/*
Package flexsmc is a generated protocol buffer package.

It is generated from these files:
	gateway.proto

It has these top-level messages:
	SMCInfo
	CmdResult
*/
package flexsmc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CmdResult_Status int32

const (
	CmdResult_SUCCESS     CmdResult_Status = 0
	CmdResult_UNKNOWN_CMD CmdResult_Status = 1
	CmdResult_DENIED      CmdResult_Status = 2
)

var CmdResult_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "UNKNOWN_CMD",
	2: "DENIED",
}
var CmdResult_Status_value = map[string]int32{
	"SUCCESS":     0,
	"UNKNOWN_CMD": 1,
	"DENIED":      2,
}

func (x CmdResult_Status) String() string {
	return proto.EnumName(CmdResult_Status_name, int32(x))
}
func (CmdResult_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type SMCInfo struct {
	Tcpport uint32 `protobuf:"varint,1,opt,name=tcpport" json:"tcpport,omitempty"`
}

func (m *SMCInfo) Reset()                    { *m = SMCInfo{} }
func (m *SMCInfo) String() string            { return proto.CompactTextString(m) }
func (*SMCInfo) ProtoMessage()               {}
func (*SMCInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CmdResult struct {
	Status CmdResult_Status `protobuf:"varint,1,opt,name=status,enum=flexsmc.CmdResult_Status" json:"status,omitempty"`
}

func (m *CmdResult) Reset()                    { *m = CmdResult{} }
func (m *CmdResult) String() string            { return proto.CompactTextString(m) }
func (*CmdResult) ProtoMessage()               {}
func (*CmdResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*SMCInfo)(nil), "flexsmc.SMCInfo")
	proto.RegisterType((*CmdResult)(nil), "flexsmc.CmdResult")
	proto.RegisterEnum("flexsmc.CmdResult_Status", CmdResult_Status_name, CmdResult_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Gateway service

type GatewayClient interface {
	Ping(ctx context.Context, in *SMCInfo, opts ...grpc.CallOption) (*CmdResult, error)
}

type gatewayClient struct {
	cc *grpc.ClientConn
}

func NewGatewayClient(cc *grpc.ClientConn) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) Ping(ctx context.Context, in *SMCInfo, opts ...grpc.CallOption) (*CmdResult, error) {
	out := new(CmdResult)
	err := grpc.Invoke(ctx, "/flexsmc.Gateway/ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Gateway service

type GatewayServer interface {
	Ping(context.Context, *SMCInfo) (*CmdResult, error)
}

func RegisterGatewayServer(s *grpc.Server, srv GatewayServer) {
	s.RegisterService(&_Gateway_serviceDesc, srv)
}

func _Gateway_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMCInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flexsmc.Gateway/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).Ping(ctx, req.(*SMCInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flexsmc.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ping",
			Handler:    _Gateway_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4f, 0x2c, 0x49,
	0x2d, 0x4f, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xcb, 0x49, 0xad, 0x28,
	0xce, 0x4d, 0x56, 0x52, 0xe6, 0x62, 0x0f, 0xf6, 0x75, 0xf6, 0xcc, 0x4b, 0xcb, 0x17, 0x92, 0xe0,
	0x62, 0x2f, 0x49, 0x2e, 0x28, 0xc8, 0x2f, 0x2a, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0d, 0x82,
	0x71, 0x95, 0x8a, 0xb8, 0x38, 0x9d, 0x73, 0x53, 0x82, 0x52, 0x8b, 0x4b, 0x73, 0x4a, 0x84, 0x0c,
	0xb9, 0xd8, 0x8a, 0x4b, 0x12, 0x4b, 0x4a, 0x8b, 0xc1, 0xaa, 0xf8, 0x8c, 0x24, 0xf5, 0xa0, 0x66,
	0xe9, 0xc1, 0xd5, 0xe8, 0x05, 0x83, 0x15, 0x04, 0x41, 0x15, 0x2a, 0x19, 0x71, 0xb1, 0x41, 0x44,
	0x84, 0xb8, 0x81, 0xd6, 0x85, 0x3a, 0x3b, 0xbb, 0x06, 0x07, 0x0b, 0x30, 0x08, 0xf1, 0x73, 0x71,
	0x87, 0xfa, 0x79, 0xfb, 0xf9, 0x87, 0xfb, 0xc5, 0x3b, 0xfb, 0xba, 0x08, 0x30, 0x0a, 0x71, 0x71,
	0xb1, 0xb9, 0xb8, 0xfa, 0x79, 0xba, 0xba, 0x08, 0x30, 0x19, 0x59, 0x72, 0xb1, 0xbb, 0x43, 0x9c,
	0x2c, 0xa4, 0xc7, 0xc5, 0x52, 0x90, 0x99, 0x97, 0x2e, 0x24, 0x00, 0xb7, 0x09, 0xea, 0x64, 0x29,
	0x21, 0x4c, 0xbb, 0x95, 0x18, 0x9c, 0xe4, 0xb9, 0x84, 0x92, 0xf3, 0x73, 0xf5, 0xd2, 0x33, 0x4b,
	0x32, 0x4a, 0x93, 0x60, 0x2a, 0x9c, 0x60, 0xc6, 0x05, 0x30, 0x26, 0xb1, 0x81, 0x03, 0xc1, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xdb, 0x35, 0xf2, 0x15, 0x01, 0x00, 0x00,
}
